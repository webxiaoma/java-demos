(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{283:function(t,a,s){"use strict";s.r(a);var n=s(19),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数组操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组操作"}},[t._v("#")]),t._v(" 数组操作")]),t._v(" "),s("h2",{attrs:{id:"数组声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组声明"}},[t._v("#")]),t._v(" 数组声明")]),t._v(" "),s("h3",{attrs:{id:"一维数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一维数组"}},[t._v("#")]),t._v(" 一维数组")]),t._v(" "),s("p",[s("code",[t._v("type[] aryName")]),t._v(" 数组类型 "),s("code",[t._v("[]")]),t._v(" 数组名称")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法一")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个int类型的数组")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法二")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化长度为5的 int类型数组 ")]),t._v("\n\n\n\n### 二维数组\n\n`type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" aryName` 数组类型`"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("` 数组名称\n\n```java\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法一")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" ary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明一个int类型的数组")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法二 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化一维长度为5，二维长度为2的 int类型数组 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法三 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("34")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("h2",{attrs:{id:"数组工具arrays类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组工具arrays类"}},[t._v("#")]),t._v(" 数组工具Arrays类")]),t._v(" "),s("p",[s("code",[t._v("Arrays类")]),t._v(" 位于 "),s("code",[t._v("java.util")]),t._v(" 中")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("int binarySearch(type[] a, int fromIndex, int toIndex, type key)")]),t._v(" 使用二分法查询 不存在反回负数")])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("a")]),t._v("为要查询的数，")]),t._v(" "),s("li",[s("code",[t._v("formIndex")]),t._v(" 可选，开始查询的索引")]),t._v(" "),s("li",[s("code",[t._v("toIndex")]),t._v(" 可选，结束要查询的索引")]),t._v(" "),s("li",[s("code",[t._v("key")]),t._v(" 要搜索的元素")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("type[] copyOf(type[] a, int length)")]),t._v(" 复制一个新数组，"),s("code",[t._v("length为新数组长度，大于")]),t._v("a`时补零")]),t._v(" "),s("li",[s("code",[t._v("type[] copyOfRange(type[] a, int fromIndex, int toIndex)")]),t._v(" 只复制 "),s("code",[t._v("a")]),t._v(" 数组的 "),s("code",[t._v("fromIndex")]),t._v(" 索引到 "),s("code",[t._v("toIndex")]),t._v(" 索引的元素。")]),t._v(" "),s("li",[s("code",[t._v("boolean equals(type[] a, type[] a2)")]),t._v(" 比较数组"),s("code",[t._v("a")]),t._v("和"),s("code",[t._v("a2")]),t._v("是否相等")]),t._v(" "),s("li",[s("code",[t._v("void fill(type[] a, int fromIndex, int toIndex, type val)")]),t._v(" 数组填充 "),s("code",[t._v("formIndex")]),t._v(" 和 "),s("code",[t._v("toIndex")]),t._v("可选,val为填充值")]),t._v(" "),s("li",[s("code",[t._v("void sort(type[] a, int fromIndex, int toIndex)")]),t._v(" 数组排序 "),s("code",[t._v("formIndex")]),t._v(" 和 "),s("code",[t._v("toIndex")]),t._v("可选")]),t._v(" "),s("li",[s("code",[t._v("String toString(type[] a)")]),t._v("将一个数组转换成一个字符串")])]),t._v(" "),s("h3",{attrs:{id:"java8-在arrays类下新增的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java8-在arrays类下新增的方法"}},[t._v("#")]),t._v(" Java8 在Arrays类下新增的方法")]),t._v(" "),s("p",[t._v("增加了并发支持")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("void parallelPrefix(xxx[] array, int fromIndex, int toIndex, XxxBinaryOperator op)")])])]),t._v(" "),s("ol",[s("li",[s("code",[t._v("a")]),t._v("为要查询的数，")]),t._v(" "),s("li",[s("code",[t._v("formIndex")]),t._v(" 可选，开始查询的索引")]),t._v(" "),s("li",[s("code",[t._v("toIndex")]),t._v(" 可选，结束要查询的索引")]),t._v(" "),s("li",[s("code",[t._v("key")]),t._v(" 要搜索的元素")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("void setAll(xxx[] array, IntToXxxFunction generator)")])]),t._v(" "),s("li",[s("code",[t._v("void parallelSetAll(xxx[] array, IntToXxxFunction generator)")])]),t._v(" "),s("li",[s("code",[t._v("void parallelSort(xxx[] a，int fromIndex, int toIndex)")])]),t._v(" "),s("li",[s("code",[t._v("Spliterator.OfXxx spliterator(xxx[] array, int startInclusive, int endExclusive)")])]),t._v(" "),s("li",[s("code",[t._v("XxxStream stream(xxx[] array, int startInclusive, int endExclusive)")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);